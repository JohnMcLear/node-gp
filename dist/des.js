"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var crypto_1 = require("crypto");
var getRetailMac = function (keystr, datastr, ivstr) {
    // bit pad
    var datastrpadded = datastr + "8000000000000000";
    datastrpadded = datastrpadded.substring(0, datastrpadded.length - (datastrpadded.length % 8));
    var key = Buffer.from(keystr, "hex");
    var data = Buffer.from(datastrpadded, "hex");
    var iv = Buffer.from(ivstr, "hex");
    var k1 = key.slice(0, 8);
    var k2 = key.slice(8, 16);
    var c1 = function () {
        var c = crypto_1.createCipheriv("des-cbc", k1, Buffer.alloc(8));
        c.setAutoPadding(false);
        return c;
    };
    var c2 = function () {
        var c = crypto_1.createDecipheriv("des-cbc", k2, Buffer.alloc(8));
        c.setAutoPadding(false);
        return c;
    };
    var bc = data.length / 8;
    var transformation1 = c1().update(data.slice(0, 8));
    var buffer = Buffer.alloc(8);
    for (var i = 1; i < bc; i++) {
        var block = data.slice(8 * i, 8 * (i + 1));
        for (var j = 0; j < 8; j++) {
            buffer[j] = transformation1[j] ^ block[j];
        }
        transformation1 = c1().update(buffer);
    }
    var transformation3d = c2().update(transformation1);
    var transformation3 = c1().update(transformation3d);
    return transformation3;
};
var key = "7962D9ECE03D1ACD4C76089DCE131543";
var data = "72C29C2371CC9BDB65B779B8E8D37B29ECC154AA56A8799FAE2F498F76ED92F2";
var iv = "000000000000";
var mac = getRetailMac(key, data, iv);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQXlEO0FBRXpELElBQU0sWUFBWSxHQUFHLFVBQUMsTUFBYSxFQUFFLE9BQWMsRUFBRSxLQUFZO0lBQzdELFVBQVU7SUFDVixJQUFJLGFBQWEsR0FBRyxPQUFPLEdBQUcsa0JBQWtCLENBQUE7SUFDaEQsYUFBYSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFFN0YsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDcEMsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDNUMsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFFbEMsSUFBSSxFQUFFLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDeEIsSUFBSSxFQUFFLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFFekIsSUFBSSxFQUFFLEdBQUc7UUFDTCxJQUFJLENBQUMsR0FBRyx1QkFBYyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQ3RELENBQUMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDdkIsT0FBTyxDQUFDLENBQUE7SUFDWixDQUFDLENBQUE7SUFDRCxJQUFJLEVBQUUsR0FBRztRQUNMLElBQUksQ0FBQyxHQUFHLHlCQUFnQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQ3hELENBQUMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDdkIsT0FBTyxDQUFDLENBQUE7SUFDWixDQUFDLENBQUE7SUFFRCxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQTtJQUV4QixJQUFJLGVBQWUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNuRCxJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQzVCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDekIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQzFDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FDNUM7UUFDRCxlQUFlLEdBQUcsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0tBQ3hDO0lBRUQsSUFBSSxnQkFBZ0IsR0FBRyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUE7SUFDbkQsSUFBSSxlQUFlLEdBQUcsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUE7SUFFbkQsT0FBTyxlQUFlLENBQUE7QUFDMUIsQ0FBQyxDQUFBO0FBR0QsSUFBSSxHQUFHLEdBQUcsa0NBQWtDLENBQUE7QUFDNUMsSUFBSSxJQUFJLEdBQUcsa0VBQWtFLENBQUE7QUFDN0UsSUFBSSxFQUFFLEdBQUcsY0FBYyxDQUFBO0FBRXZCLElBQUksR0FBRyxHQUFHLFlBQVksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2lwaGVyaXYsIGNyZWF0ZURlY2lwaGVyaXYgfSBmcm9tIFwiY3J5cHRvXCJcclxuXHJcbmNvbnN0IGdldFJldGFpbE1hYyA9IChrZXlzdHI6c3RyaW5nLCBkYXRhc3RyOnN0cmluZywgaXZzdHI6c3RyaW5nKSA9PiB7XHJcbiAgICAvLyBiaXQgcGFkXHJcbiAgICBsZXQgZGF0YXN0cnBhZGRlZCA9IGRhdGFzdHIgKyBcIjgwMDAwMDAwMDAwMDAwMDBcIlxyXG4gICAgZGF0YXN0cnBhZGRlZCA9IGRhdGFzdHJwYWRkZWQuc3Vic3RyaW5nKDAsIGRhdGFzdHJwYWRkZWQubGVuZ3RoIC0gKGRhdGFzdHJwYWRkZWQubGVuZ3RoICUgOCkpXHJcbiAgICBcclxuICAgIGxldCBrZXkgPSBCdWZmZXIuZnJvbShrZXlzdHIsIFwiaGV4XCIpXHJcbiAgICBsZXQgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGFzdHJwYWRkZWQsIFwiaGV4XCIpXHJcbiAgICBsZXQgaXYgPSBCdWZmZXIuZnJvbShpdnN0ciwgXCJoZXhcIilcclxuXHJcbiAgICBsZXQgazEgPSBrZXkuc2xpY2UoMCwgOClcclxuICAgIGxldCBrMiA9IGtleS5zbGljZSg4LCAxNilcclxuXHJcbiAgICBsZXQgYzEgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGMgPSBjcmVhdGVDaXBoZXJpdihcImRlcy1jYmNcIiwgazEsIEJ1ZmZlci5hbGxvYyg4KSlcclxuICAgICAgICBjLnNldEF1dG9QYWRkaW5nKGZhbHNlKVxyXG4gICAgICAgIHJldHVybiBjXHJcbiAgICB9XHJcbiAgICBsZXQgYzIgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGMgPSBjcmVhdGVEZWNpcGhlcml2KFwiZGVzLWNiY1wiLCBrMiwgQnVmZmVyLmFsbG9jKDgpKVxyXG4gICAgICAgIGMuc2V0QXV0b1BhZGRpbmcoZmFsc2UpXHJcbiAgICAgICAgcmV0dXJuIGNcclxuICAgIH1cclxuICAgIFxyXG4gICAgbGV0IGJjID0gZGF0YS5sZW5ndGggLyA4XHJcblxyXG4gICAgbGV0IHRyYW5zZm9ybWF0aW9uMSA9IGMxKCkudXBkYXRlKGRhdGEuc2xpY2UoMCwgOCkpXHJcbiAgICBsZXQgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDgpXHJcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IGJjOyBpKyspIHtcclxuICAgICAgICBsZXQgYmxvY2sgPSBkYXRhLnNsaWNlKDggKiBpLCA4ICogKGkgKyAxKSlcclxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDg7IGorKykge1xyXG4gICAgICAgICAgICBidWZmZXJbal0gPSB0cmFuc2Zvcm1hdGlvbjFbal0gXiBibG9ja1tqXVxyXG4gICAgICAgIH1cclxuICAgICAgICB0cmFuc2Zvcm1hdGlvbjEgPSBjMSgpLnVwZGF0ZShidWZmZXIpICAgIFxyXG4gICAgfVxyXG5cclxuICAgIGxldCB0cmFuc2Zvcm1hdGlvbjNkID0gYzIoKS51cGRhdGUodHJhbnNmb3JtYXRpb24xKVxyXG4gICAgbGV0IHRyYW5zZm9ybWF0aW9uMyA9IGMxKCkudXBkYXRlKHRyYW5zZm9ybWF0aW9uM2QpXHJcblxyXG4gICAgcmV0dXJuIHRyYW5zZm9ybWF0aW9uM1xyXG59XHJcblxyXG5cclxubGV0IGtleSA9IFwiNzk2MkQ5RUNFMDNEMUFDRDRDNzYwODlEQ0UxMzE1NDNcIlxyXG5sZXQgZGF0YSA9IFwiNzJDMjlDMjM3MUNDOUJEQjY1Qjc3OUI4RThEMzdCMjlFQ0MxNTRBQTU2QTg3OTlGQUUyRjQ5OEY3NkVEOTJGMlwiXHJcbmxldCBpdiA9IFwiMDAwMDAwMDAwMDAwXCJcclxuXHJcbmxldCBtYWMgPSBnZXRSZXRhaWxNYWMoa2V5LCBkYXRhLCBpdilcclxuXHJcbiJdfQ==